/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as UsersRouteImport } from './routes/users'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as SigninRouteImport } from './routes/signin'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as AuthRouteImport } from './routes/auth'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DashboardIndexRouteImport } from './routes/dashboard.index'
import { Route as DashboardUsersRouteImport } from './routes/dashboard.users'
import { Route as DashboardProjectsRouteImport } from './routes/dashboard.projects'
import { Route as DashboardInvoicesRouteImport } from './routes/dashboard.invoices'
import { Route as DashboardCustomersRouteImport } from './routes/dashboard.customers'
import { Route as DashboardAnalyticsRouteImport } from './routes/dashboard.analytics'

const UsersRoute = UsersRouteImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => rootRouteImport,
} as any)
const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const SigninRoute = SigninRouteImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardUsersRoute = DashboardUsersRouteImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardProjectsRoute = DashboardProjectsRouteImport.update({
  id: '/projects',
  path: '/projects',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardInvoicesRoute = DashboardInvoicesRouteImport.update({
  id: '/invoices',
  path: '/invoices',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardCustomersRoute = DashboardCustomersRouteImport.update({
  id: '/customers',
  path: '/customers',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardAnalyticsRoute = DashboardAnalyticsRouteImport.update({
  id: '/analytics',
  path: '/analytics',
  getParentRoute: () => DashboardRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/auth': typeof AuthRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/users': typeof UsersRoute
  '/dashboard/analytics': typeof DashboardAnalyticsRoute
  '/dashboard/customers': typeof DashboardCustomersRoute
  '/dashboard/invoices': typeof DashboardInvoicesRoute
  '/dashboard/projects': typeof DashboardProjectsRoute
  '/dashboard/users': typeof DashboardUsersRoute
  '/dashboard/': typeof DashboardIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/auth': typeof AuthRoute
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/users': typeof UsersRoute
  '/dashboard/analytics': typeof DashboardAnalyticsRoute
  '/dashboard/customers': typeof DashboardCustomersRoute
  '/dashboard/invoices': typeof DashboardInvoicesRoute
  '/dashboard/projects': typeof DashboardProjectsRoute
  '/dashboard/users': typeof DashboardUsersRoute
  '/dashboard': typeof DashboardIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/auth': typeof AuthRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/users': typeof UsersRoute
  '/dashboard/analytics': typeof DashboardAnalyticsRoute
  '/dashboard/customers': typeof DashboardCustomersRoute
  '/dashboard/invoices': typeof DashboardInvoicesRoute
  '/dashboard/projects': typeof DashboardProjectsRoute
  '/dashboard/users': typeof DashboardUsersRoute
  '/dashboard/': typeof DashboardIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/auth'
    | '/dashboard'
    | '/signin'
    | '/signup'
    | '/users'
    | '/dashboard/analytics'
    | '/dashboard/customers'
    | '/dashboard/invoices'
    | '/dashboard/projects'
    | '/dashboard/users'
    | '/dashboard/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/auth'
    | '/signin'
    | '/signup'
    | '/users'
    | '/dashboard/analytics'
    | '/dashboard/customers'
    | '/dashboard/invoices'
    | '/dashboard/projects'
    | '/dashboard/users'
    | '/dashboard'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/auth'
    | '/dashboard'
    | '/signin'
    | '/signup'
    | '/users'
    | '/dashboard/analytics'
    | '/dashboard/customers'
    | '/dashboard/invoices'
    | '/dashboard/projects'
    | '/dashboard/users'
    | '/dashboard/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  AuthRoute: typeof AuthRoute
  DashboardRoute: typeof DashboardRouteWithChildren
  SigninRoute: typeof SigninRoute
  SignupRoute: typeof SignupRoute
  UsersRoute: typeof UsersRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/users': {
      id: '/users'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof UsersRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signin': {
      id: '/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof SigninRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/users': {
      id: '/dashboard/users'
      path: '/users'
      fullPath: '/dashboard/users'
      preLoaderRoute: typeof DashboardUsersRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/projects': {
      id: '/dashboard/projects'
      path: '/projects'
      fullPath: '/dashboard/projects'
      preLoaderRoute: typeof DashboardProjectsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/invoices': {
      id: '/dashboard/invoices'
      path: '/invoices'
      fullPath: '/dashboard/invoices'
      preLoaderRoute: typeof DashboardInvoicesRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/customers': {
      id: '/dashboard/customers'
      path: '/customers'
      fullPath: '/dashboard/customers'
      preLoaderRoute: typeof DashboardCustomersRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/analytics': {
      id: '/dashboard/analytics'
      path: '/analytics'
      fullPath: '/dashboard/analytics'
      preLoaderRoute: typeof DashboardAnalyticsRouteImport
      parentRoute: typeof DashboardRoute
    }
  }
}

interface DashboardRouteChildren {
  DashboardAnalyticsRoute: typeof DashboardAnalyticsRoute
  DashboardCustomersRoute: typeof DashboardCustomersRoute
  DashboardInvoicesRoute: typeof DashboardInvoicesRoute
  DashboardProjectsRoute: typeof DashboardProjectsRoute
  DashboardUsersRoute: typeof DashboardUsersRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardAnalyticsRoute: DashboardAnalyticsRoute,
  DashboardCustomersRoute: DashboardCustomersRoute,
  DashboardInvoicesRoute: DashboardInvoicesRoute,
  DashboardProjectsRoute: DashboardProjectsRoute,
  DashboardUsersRoute: DashboardUsersRoute,
  DashboardIndexRoute: DashboardIndexRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  AuthRoute: AuthRoute,
  DashboardRoute: DashboardRouteWithChildren,
  SigninRoute: SigninRoute,
  SignupRoute: SignupRoute,
  UsersRoute: UsersRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
